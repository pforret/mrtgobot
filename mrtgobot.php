<?php
include_once("lib/settings.inc");
include_once("lib/class_mrtgobot.inc");
$shortopts=Array(
	"v"	=> "verbose",
	"f" => "force (e.g. overwrite config files)",
	"s" => "silent (show no output)",
	"?"	=> "help (show usage)",
	);
	
$actions=Array(
	"cron",
	"crontab",
	"get",
	"help",
	"index",
	"new",
	"probe",
	"rsync",
	"run",
	"setup",
	"usage",
	);

$optlist=implode("",array_keys($shortopts));
$options = getopt($optlist);
if(isset($options["v"]))	$debug=true;
$raw=$argv;
array_shift($raw); // remove program name itself
$endofopts=false;
while(!$endofopts){
	$vals=array_values($raw);
	$val1=$vals[0];
	if(substr($val1,0,1)=="-"){
		// is an option
		$key=substr($val1,1,1);
		if(isset($shortopts["$key:"])){
			array_shift($raw);
			array_shift($raw);
			continue;
		}
		array_shift($raw);
	} else {
		$endofopts=true;
	}
}
trace("Command line:");
trace($argv);
trace("Options detected:");
trace($options);
trace("Parameters that are not options:");
trace($raw);

if(isset($raw[0])){
	$action=strtolower($raw[0]);
} else {
	$action="help";
}
if(isset($options["?"]))	$action="help";
if(!in_array($action,$actions)){
	warning("mrtgobot","[$action] is not an accepted action");
	warning("mrtgobot","Accepted actions (" . implode(",",$actions) . ")",true);
}
$mg=New Mrtgobot;
switch($action){
case "help":
case "usage":
	show_usage();
	exit(0);
	break;;
	
case "setup":
	if(!isset($raw[1]) OR !isset($raw[2])){
		warning($action,"need [cfgfolder] and [htmlfolder] as parameters",true);
	}
	$mg->init_ini($raw[1],$raw[2]);
	break;;
	
case "new":
	// create new .cfg file
	if(!isset($raw[1])){
		warning($action,"need [cfgname] [title] as parameters",true);
	}
	if(!isset($raw[2])){
		$raw[2]="";
	}
	$mg->new_cfg($raw[1],$raw[2]);
	break;;
	
case "index":
	// for each .cfg file, create an index page
	break;;
	
case "run":
	// for each .cfg file, decide if it has to run and run it
	break;;
	
case "crontab":
	if(!isset($raw[1])){
		warning($action,"need [folder|file.cfg] as parameter",true);
	}
	// give line(s) that should be in crontab
	// RUN every 5 minutes
	// INDEX every day
	// RSYNC every hour
	$prog=realpath($argv[0]);
	$date=date("c");
	$profile=realpath($raw[1]);
	$lines[]="### Generated by $prog on $date";
	$lines[]="### add to /etc/crontab or by executing crontab -e";
	$lines[]="### Remark: some systems (eg NAS) use a slightly different crontab format";
	$lines[]="###         change [$prog] by [root	$prog]";
	$lines[]="# run the data collection every 5 minutes";
	$lines[]="0-59/5	*	*	*	*	$prog run   $profile";
	$lines[]="# re-generate the indexes every morning";
	$lines[]="2	7	*	*	*	$prog index $profile";
	$lines[]="# copy output to external web server every hour";
	$lines[]="3	*	*	*	*	$prog rsync $profile";
	$lines[]="";
	echo implode("\r\n",$lines);
	break;;
	
case "rsync":
	break;;
	
case "probe":
	break;;
	
default:
	warning("mrtgobot","unknown action [$action]",true);
}

function show_usage(){
	global $argv;
	
	$prog=basename($argv[0]);
	echo "
====================================
===== MRTGoBot [ACTION] [PARAMS]
===== (c) 2015 - Peter Forret

$prog SETUP [folder]
	create base MRTG config and HTML folders
	
$prog INDEX [target]
	create index html for this/all config
	
$prog RUN   [target]
	run this/all config .cfg 
	
$prog CRONTAB [target]
	copy all html files via rsync
	
$prog RSYNC [target]
	copy all html files via rsync
	
$prog PROBE [SENSOR] [OPTIONS]
	Purpose: probe values of local system: cpu, mem, network, disk, folder size, ...
	[SENSOR] can be [CPU|LOAD|MEM|DISK|FOLDERSIZE|FILESIZE|NETWORK], result is MRTG ready
	Example: Target[XYZ]=`mrtgobot PROBE CPU`
	
$prog GET   [options] [url]
	wrapper around HTTP GET: caching, error checking, timeout, ...
	
====================================
";
}
?>